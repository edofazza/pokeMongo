// METHOD TESTED ON WINDOWS 10 AND macOS Big Sur

1) Open Neo4j Desktop, open the DBMS page, select the Pokemongo db and, then, click on "Open Folder"
2) Copy inside the "import" folder all the .csv files
3) In the same page of Neo4j Desktop go to "Settings" and set "dbms.memory.heap.max_size=4G" (1G is not enough for inserting all the Posts). Click on "Apply" and start/restart the db 
4) Copy and paste addPokemonCypher.cipher in the Neo4j Browser
5) Execute in the following order this queries:

//1
LOAD CSV FROM "file:///cipherUserWhole.csv" AS line
CREATE (:User{username: line[0], country: line[1]})

//1b (performance)
CREATE INDEX index_username FOR (u:User) ON (u.username)
CREATE INDEX index_name FOR (p:Pokemon) ON (p.name)

//2
LOAD CSV FROM "file:///cipherFavoriteWhole.csv" AS line
MATCH (from:User) WHERE from.username = line[0] MATCH (to:Pokemon) WHERE to.name = line[1] MERGE (from)-[:LIKES]->(to);

//3
LOAD CSV FROM "file:///cipherFriendsWhole.csv" AS line
MATCH (from:User) WHERE from.username = line[0] MATCH (to:User) WHERE to.username = line[1] MERGE (from)-[:FOLLOW]->(to)

//4
LOAD CSV FROM "file:///cipherTeamWhole.csv" AS line
MATCH (n:User) WHERE n.username = line[0] MATCH (p:Pokemon) WHERE p.name = line[1] CREATE (n)-[:HAS {slot: toInteger(line[2])}]->(p)

//5 
LOAD CSV FROM "file:///cipherPostWhole.csv" AS line
MATCH (u:User) WHERE u.username = line[0] MATCH (p:Pokemon) WHERE p.name = line[1] CREATE (u)-[:CREATED]->(p1:Post{creationDate: localdatetime(line[2]), content: line[3]})-[:TOPIC]->(p)


//5b
CREATE INDEX index_post_date FOR (p:Post) ON (p.creationDate)

//6
LOAD CSV FROM "file:///cipherSubpostWhole.csv" AS line
MATCH (u:User) WHERE u.username = line[0] MATCH (uTopic:User)-[:CREATED]->(pTopic:Post)-[:TOPIC]->(pokTopic:Pokemon) WHERE uTopic.username = line[1] and pTopic.creationDate = localdatetime(line[2]) and pTopic.content = line[3] and pokTopic.name = line[4] CREATE (u)-[:CREATED]->(p1:Post{content: line[5], creationDate: localdatetime(line[6])})-[:TOPIC]->(pTopic)


DROP INDEX index_username
DROP INDEX index_name
DROP INDEX index_post_date


// FOR DELETING THE ENTIRE DB
match (p) detach delete p